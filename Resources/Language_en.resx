<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="btnClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="BtnDark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="btnFilter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="BtnLight" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="BtnLogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="btnSave" xml:space="preserve">
    <value>Save invoice</value>
  </data>
  <data name="BtnSilver" xml:space="preserve">
    <value>Silver</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="CInvoice" xml:space="preserve">
    <value>Create invoice</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date of Issue</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="gpAvaibleP" xml:space="preserve">
    <value>Avaible Products</value>
  </data>
  <data name="gpInvoiceD" xml:space="preserve">
    <value>Invoice Details</value>
  </data>
  <data name="gpInvoiceI" xml:space="preserve">
    <value>Invoice Items</value>
  </data>
  <data name="gpInvoices" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="IName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="InvoiceNumber" xml:space="preserve">
    <value>Invoice Number</value>
  </data>
  <data name="IPrice" xml:space="preserve">
    <value>Price [BAM]</value>
  </data>
  <data name="IQuantity" xml:space="preserve">
    <value>Quantity [pcs]</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="lbCustomer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="lbIssueDate" xml:space="preserve">
    <value>Date of issue</value>
  </data>
  <data name="LbPass" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="lbSeller" xml:space="preserve">
    <value>Seller</value>
  </data>
  <data name="LbTitle" xml:space="preserve">
    <value>System Log In</value>
  </data>
  <data name="lbTotal" xml:space="preserve">
    <value>Total:</value>
  </data>
  <data name="LbUser" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="LogInError1" xml:space="preserve">
    <value>Invalid username or password</value>
  </data>
  <data name="LogInError2" xml:space="preserve">
    <value>Inactive employee</value>
  </data>
  <data name="MenuLang" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="MenuLangEn" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="MenuLangSr" xml:space="preserve">
    <value>Serbian</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price [BAM]</value>
  </data>
  <data name="ProductId" xml:space="preserve">
    <value>Product ID</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity [pcs]</value>
  </data>
  <data name="SellerErrorMsg1" xml:space="preserve">
    <value>Not enough products available! Available:</value>
  </data>
  <data name="SellerErrorMsg2" xml:space="preserve">
    <value>Input valid quantity of products</value>
  </data>
  <data name="SellerMsgNotification" xml:space="preserve">
    <value>Invoice successfully created!</value>
  </data>
  <data name="SellerMsgRemove1" xml:space="preserve">
    <value>Do you want to remove item</value>
  </data>
  <data name="SellerMsgRemove2" xml:space="preserve">
    <value>Confirm removal</value>
  </data>
  <data name="SellerMsgWarning1" xml:space="preserve">
    <value>Fill in all required fields!</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Title_LogInWindow" xml:space="preserve">
    <value>Computer equipment store</value>
  </data>
  <data name="Title_SellerWindow" xml:space="preserve">
    <value>Computer equipment store - '{0}'</value>
  </data>
  <data name="txtFilterCategory" xml:space="preserve">
    <value>Filter by Category</value>
  </data>
  <data name="txtFilterId" xml:space="preserve">
    <value>Filter by ID</value>
  </data>
  <data name="txtFilterName" xml:space="preserve">
    <value>Filter by Name</value>
  </data>
  <data name="txtName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="txtPhone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="txtSearch" xml:space="preserve">
    <value>Search by Name</value>
  </data>
  <data name="txtSurrname" xml:space="preserve">
    <value>Surrname</value>
  </data>
  <data name="ViewInvoice" xml:space="preserve">
    <value>View All Invoices</value>
  </data>
  <data name="AddEmployee" xml:space="preserve">
    <value>Add Employee</value>
  </data>
  <data name="AddProducts" xml:space="preserve">
    <value>Add Products</value>
  </data>
  <data name="AllEmployees" xml:space="preserve">
    <value>All Employees</value>
  </data>
  <data name="btnAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="btnAddCategory" xml:space="preserve">
    <value>Add Category</value>
  </data>
  <data name="btnAddProduct" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="btnSaveChanges" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="btnSaveOrder" xml:space="preserve">
    <value>Save Order</value>
  </data>
  <data name="cbActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="EditEmployee" xml:space="preserve">
    <value>Edit Employee</value>
  </data>
  <data name="EmployeeDetails" xml:space="preserve">
    <value>Employee Details</value>
  </data>
  <data name="gpAllP" xml:space="preserve">
    <value>All Products</value>
  </data>
  <data name="gpOrder" xml:space="preserve">
    <value>Products For Order</value>
  </data>
  <data name="gpOrderD" xml:space="preserve">
    <value>Order Details</value>
  </data>
  <data name="gpOrders" xml:space="preserve">
    <value>All Orders</value>
  </data>
  <data name="lbCatName" xml:space="preserve">
    <value>Category Name</value>
  </data>
  <data name="lbDate" xml:space="preserve">
    <value>Date of employment:</value>
  </data>
  <data name="lbManager" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="lbNewCat" xml:space="preserve">
    <value>New Category</value>
  </data>
  <data name="lbRole" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="lbSupplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="ManagerMsgNotification" xml:space="preserve">
    <value>Employee successfully created!</value>
  </data>
  <data name="ManagerMsgNotification1" xml:space="preserve">
    <value>Successfully executed change of employee:</value>
  </data>
  <data name="ManagerMsgNotification2" xml:space="preserve">
    <value>Successfully added new product!</value>
  </data>
  <data name="ManagerMsgNotification3" xml:space="preserve">
    <value>Successfully added new category!</value>
  </data>
  <data name="NameEmp" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order From A Supplier</value>
  </data>
  <data name="OrderNumber" xml:space="preserve">
    <value>Order Id</value>
  </data>
  <data name="SurrnameEmp" xml:space="preserve">
    <value>Surrname</value>
  </data>
  <data name="Title_ManagerWindow" xml:space="preserve">
    <value>Computer equipment store - '{0}'</value>
  </data>
  <data name="ViewOrders" xml:space="preserve">
    <value>View All Orders</value>
  </data>
  <data name="EmptyDataGrid" xml:space="preserve">
    <value>No data to display</value>
  </data>
  <data name="ManagerMsgNotification4" xml:space="preserve">
    <value>Order successfully created!</value>
  </data>
</root>